# -*- mode: nginx -*-

# 日志文件名变量
# if ($time_iso8601 ~ "^(\d{4})-(\d{2})-(\d{2})") {
#     set $year $1;
#     set $month $2;
#     set $day $3;
# }
# if ($time_iso8601 ~ "^(?<year>\d{4})-(?<month>\d{2})-(?<day>\d{2})") {}

# 日志格式
log_format main
    '$remote_addr - $remote_user [$time_local] "$request" '
    '$status $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';

log_format vhost
    '$host : $remote_addr - $remote_user [$time_local] "$request" '
    '$status $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';

log_format proxy_protocol
    '$host : $remote_addr | $proxy_protocol_addr - $remote_user [$time_local] "$request" '
    '$status $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';

log_format main_json escape=json '{'
    # Time
    '"time_local": "$time_local", '
    '"time_iso8601": "$time_iso8601", ' # local time in the ISO 8601 standard format
    '"msec": "$msec", ' # request unixtime in seconds with a milliseconds resolution
    # Request
    '"body_bytes_sent": "$body_bytes_sent", ' # the number of body bytes exclude headers sent to a client
    '"http_referer": "$http_referer", ' # HTTP referer
    '"request_id": "$request_id", ' # the unique request id
    '"request_length": "$request_length", ' # request length (including headers and body)
    '"request_method": "$request_method", ' # request method
    '"request_time": "$request_time", ' # request processing time in seconds with msec resolution
    '"request_uri": "$request_uri", ' # full path and arguments if the request
    '"request": "$request", ' # full path no arguments if the request
    '"status": "$status", ' # response status code
    '"http_authorization": "$http_authorization", '
    # Backend
    '"proxy_host": "$proxy_host", '
    '"proxy_port": "$proxy_port", '
    '"upstream_cache_status": "$upstream_cache_status", ' # cache HIT/MISS where applicable
    '"upstream_connect_time": "$upstream_connect_time", ' # upstream handshake time incl. TLS
    '"upstream_header_time": "$upstream_header_time", ' # time spent receiving upstream headers
    '"upstream_http_server": "$upstream_http_server", '
    '"upstream_response_length": "$upstream_response_length", ' # upstream response length
    '"upstream_response_time": "$upstream_response_time", ' # time spend receiving upstream body
    '"upstream_addr": "$upstream_addr", ' # upstream backend server for proxied requests
    # Client
    '"http_user_agent": "$http_user_agent", ' # user agent
    '"remote_addr": "$remote_addr", ' # client IP
    '"remote_port": "$remote_port", ' # client port
    '"remote_user": "$remote_user", ' # client HTTP username
    '"realip_remote_addr": "$realip_remote_addr", '
    '"proxy_protocol_addr": "$proxy_protocol_addr", '
    # Other
    '"args": "$args", ' # args
    '"connection_requests": "$connection_requests", ' # number of requests made in connection
    '"connection": "$connection", ' # connection serial number
    '"content_length": "$content_length", '
    '"content_type": "$content_type", '
    '"host": "$host", '
    '"http_accept_language": "$http_accept_language", '
    '"http_host": "$http_host", ' # the request Host: header
    '"http_x_forwarded_for": "$http_x_forwarded_for", ' # http_x_forwarded_for
    '"pid": "$pid", ' # process pid
    '"pipe": "$pipe", ' # “p” if request was pipelined, “.” otherwise
    '"query_string": "$query_string", '
    '"request_body": "$request_body", '
    '"scheme": "$scheme", ' # http or https
    '"server_name": "$server_name", ' # the name of the vhost serving the request
    '"server_protocol": "$server_protocol", ' # request protocol, like HTTP/1.1 or HTTP/2.0
    '"ssl_cipher": "$ssl_cipher", ' # TLS cipher
    '"ssl_protocol": "$ssl_protocol", ' # TLS protocol
    '"upstream_bytes_received": "$upstream_bytes_received", '
    '"upstream_bytes_sent": "$upstream_bytes_sent", '
    '"uri": "$uri", '
'}';

log_format main_json_simple escape=json '{'
    '"time_local": "$time_iso8601", '
    '"client_ip": "$http_x_forwarded_for", '
    '"remote_addr": "$remote_addr", '
    '"request": "$request", '
    '"status": "$status", '
    '"body_bytes_sent": "$body_bytes_sent", '
    '"request_time": "$request_time", '
    '"upstream_response_time": "$upstream_response_time", '
    '"upstream_addr": "$upstream_addr", '
    '"http_referrer": "$http_referer", '
    '"http_user_agent": "$http_user_agent", '
    '"request_id": "$request_id" '
'}';

# Logging
# access_log           off;
# access_log           /var/log/nginx/$host-access-$year$month$day.log vhost;
# access_log           /var/log/nginx/$host-error-$year$month$day.log warn;
# access_log           /path/to/log.gz combined gzip flush=5m;

access_log     /var/log/nginx/access.log vhost;
error_log      /var/log/nginx/error.log warn;
